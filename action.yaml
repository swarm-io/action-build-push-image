name: Build and Push image
description: 'Builds an image, pushes to artifact registry, and caches to gha as well as the `cache` tag'
inputs:
  credentials-json:
    description: 'gcloud service account credentials json'
    required: true
  project-id:
    description: 'gcloud project id'
    required: true
  repository:
    description: 'artifact registry repository'
    required: false
    default: 'us-west1-docker.pkg.dev'
  secrets:
    description: 'docker build secrets, comma separated string key=value'
    required: false
    default: ''
  tag-name:
    description: 'tag name, excluding tag version, such as `myapp`'
    required: false
    default: '${{ github.event.repository.name }}'
  tag-versions:
    description: 'git tags to push, comma separated string such as `latest,v1.0.0`'
    required: false
    default: 'latest,${{ github.event.release.tag_name }}'
  cache-tag-version:
    description: 'git tag version to use for the registry cache'
    required: false
    default: 'cache'
runs:
  using: composite
  steps:
    - uses: crazy-max/ghaction-dump-context@v1
    - uses: actions/checkout@v2
    - id: auth
      uses: google-github-actions/auth@v0
      with:
        credentials_json: ${{ inputs.credentials-json }}
    - uses: google-github-actions/setup-gcloud@v0.3.0
      with:
        project_id: ${{ inputs.project-id }}
    - shell: bash
      run: |
        gcloud auth configure-docker ${{ inputs.repository }}
    - uses: docker/setup-buildx-action@v1
    - id: get-tags
      shell: bash
      run: |
        fullTags=""
        tagVersions=${{ inputs.tag-versions }}
        for version in ${tagVersions//,/ }
        do
          fullTags="${{ inputs.repository }}/${{inputs.project-id}}/${{ inputs.tag-name }}:$version,$fullTags"
        done
        fullTags=${fullTags::-1}
        echo "will push with tags: $fullTags"
        echo "::set-output name=tags::$fullTags"
    - id: build-image
      uses: docker/build-push-action@v2
      with:
        secrets: ${{ inputs.secrets }}
        tags: ${{ steps.get-tags.outputs.tags }}
        push: true
        cache-from: type=gha,mode=max
        cache-to: type=gha,mode=max
        no-cache: ${{ contains(github.event.head_commit.message, 'no-cache') }} # in case we need to change the secret value
    - name: Cache to gar cache tag
      # buildkit doesn't support multiple cache-to destinations yet. But we want to cache in gha as well as gar
      # so that others can use the cache from the repository. So adding this step here to build from gha cache
      # and cache to gar cache tag
      uses: docker/build-push-action@v2
      with:
        secrets: ${{ inputs.secrets }}
        cache-from: type=gha,mode=max
        cache-to: type=registry,ref=${{ inputs.repository }}/${{inputs.project-id}}/${{ inputs.tag-name }}:${{ inputs.cache-tag-version }},mode=max